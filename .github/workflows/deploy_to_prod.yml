name: Deploy to PROD

env:
  # 🖊️ EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: '${{ secrets.OPENSHIFT_SERVER }}'
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE_TEST: '${{ secrets.ECAS_NAMESPACE_NO_ENV }}-test'
  OPENSHIFT_NAMESPACE_PROD: '${{ secrets.ECAS_NAMESPACE_NO_ENV }}-prod'
  
  REPO_NAME: educ-ecas
  APP_NAME: ecas
  APP_NAME_FRONTEND: ecas-frontend
  APP_NAME_API: ecas-api
  APP_NAME_CAS: cas-api
  NAMESPACE: '${{ secrets.ECAS_NAMESPACE_NO_ENV }}'
  IMAGE_NAME_FRONTEND: ecas-frontend
  IMAGE_NAME_API: ecas-api
  IMAGE_NAME_CAS: cas-api
  MIN_CPU: "20m"
  MAX_CPU: "250m"
  MIN_MEM: "500Mi"
  MAX_MEM: "2Gi"
  MIN_REPLICAS: "3"
  MAX_REPLICAS: "5"
  MAX_REPLICAS_TEST: '3'
  BRANCH: master
  HOST_ROUTE: '${{ secrets.SITE_URL }}'
  APP_KEY: '${{ secrets.APP_KEY}}'
  API_KEY: '${{ secrets.API_KEY}}'
  DYNAMICS_USERNAME: '${{ secrets.DYNAMICS_USERNAME}}'   
  DYNAMICS_PASSWORD: '${{ secrets.DYNAMICS_PASSWORD}}' 
  KEYCLOAK_AUTHSERVERURL: '${{ secrets.KEYCLOAK_AUTHSERVERURL}}' 
  KEYCLOAK_REALM: '${{ secrets.KEYCLOAK_REALM}}' 
  KEYCLOAK_CLIENTID: '${{ secrets.KEYCLOAK_CLIENTID}}-prod'  


  ECASAPISECURITYSETTINGS__USERNAME: '${{ secrets.ECASAPISECURITYSETTINGS__USERNAME}}'
  ECASAPISECURITYSETTINGS__PASSWORD: '${{ secrets.ECASAPISECURITYSETTINGS__PASSWORD}}'   
  DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTID: '${{ secrets.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTID}}'
  DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTSECRET: '${{ secrets.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTSECRET}}'
  DYNAMICSAUTHENTICATIONSETTINGS__CLOUDUSERNAME: '${{ secrets.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDUSERNAME}}'
  TENANTID: '${{ secrets.TENANTID}}'
  ASPNETCORE_ENVIRONMENT: 'Production'



on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:


jobs:
  deploy-to-openshift-prod:
    name: Deploy to OpenShift PROD
    runs-on: ubuntu-24.04
    environment: prod


    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

        # https://github.com/redhat-actions/oc-login#readme
      - uses: actions/checkout@v2
      - name: Deploy
        run: |
          set -eux
          # Login to OpenShift and select project
          oc login --token=${{ env.OPENSHIFT_TOKEN }} --server=${{ env.OPENSHIFT_SERVER }}
          oc project ${{ env.OPENSHIFT_NAMESPACE_PROD }}
           # Cancel any rollouts in progress

          oc rollout cancel dc/${{ env.IMAGE_NAME_FRONTEND }} 2> /dev/null || true && echo "No rollout in progress"

          oc rollout cancel dc/${{ env.IMAGE_NAME_API }} 2> /dev/null || true && echo "No ecas api rollout in progress"

          oc rollout cancel dc/${{ env.IMAGE_NAME_CAS }} 2> /dev/null  || true && echo "No cas api rollout in progress"
          
          oc tag ${{ env.OPENSHIFT_NAMESPACE_TEST }}/${{ env.REPO_NAME }}-frontend:${{ steps.get-latest-tag.outputs.tag }} \
          ${{ env.OPENSHIFT_NAMESPACE_PROD }}/${{ env.REPO_NAME }}-frontend:${{ steps.get-latest-tag.outputs.tag }}

          oc tag ${{ env.OPENSHIFT_NAMESPACE_TEST }}/${{ env.REPO_NAME }}-api:${{ steps.get-latest-tag.outputs.tag }} \
          ${{ env.OPENSHIFT_NAMESPACE_PROD }}/${{ env.REPO_NAME }}-api:${{ steps.get-latest-tag.outputs.tag }}

          oc tag ${{ env.OPENSHIFT_NAMESPACE_TEST }}/${{ env.REPO_NAME }}-cas-api:${{ steps.get-latest-tag.outputs.tag }} \
          ${{ env.OPENSHIFT_NAMESPACE_PROD }}/${{ env.REPO_NAME }}-cas-api:${{ steps.get-latest-tag.outputs.tag }}



           # Process and apply deployment template
          
          oc process -f ./openshift/templates/ecas-frontend/frontend.dc.yaml -p APP_NAME=${{ env.APP_NAME }} -p REPO_NAME=${{ env.REPO_NAME }} -p BRANCH=${{ env.BRANCH }}  -p NAMESPACE=${{ env.OPENSHIFT_NAMESPACE_PROD }} -p TAG=${{ steps.get-latest-tag.outputs.tag  }} -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} -p MIN_CPU=${{ env.MIN_CPU }} -p MAX_CPU=${{ env.MAX_CPU }} -p MIN_MEM=${{ env.MIN_MEM }} -p MAX_MEM=${{ env.MAX_MEM }} -p HOST_ROUTE=${{ env.HOST_ROUTE }}  -p APP_KEY=${{env.APP_KEY}} -p API_KEY=${{env.API_KEY}} -p DYNAMICS_USERNAME=${{env.DYNAMICS_USERNAME}} -p DYNAMICS_PASSWORD=${{env.DYNAMICS_PASSWORD}} -p KEYCLOAK_AUTHSERVERURL=${{env.KEYCLOAK_AUTHSERVERURL}} -p KEYCLOAK_REALM=${{env.KEYCLOAK_REALM}} -p KEYCLOAK_CLIENTID=${{env.KEYCLOAK_CLIENTID}}\
          | oc apply -f -



          oc process -f ./openshift/templates/ecas-api/api.dc.yaml -p APP_NAME=${{ env.APP_NAME }} -p REPO_NAME=${{ env.REPO_NAME }} -p BRANCH=${{ env.BRANCH }}  -p NAMESPACE=${{ env.OPENSHIFT_NAMESPACE_PROD }} -p TAG=${{ steps.get-latest-tag.outputs.tag  }} -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} -p MIN_CPU=${{ env.MIN_CPU }} -p MAX_CPU=${{ env.MAX_CPU }} -p MIN_MEM=${{ env.MIN_MEM }} -p MAX_MEM=${{ env.MAX_MEM }} -p HOST_ROUTE=${{ env.HOST_ROUTE }} -p  ASPNETCORE_ENVIRONMENT=${{  env.ASPNETCORE_ENVIRONMENT }}  -p ECASAPISECURITYSETTINGS__USERNAME=${{ env.ECASAPISECURITYSETTINGS__USERNAME }}  -p ECASAPISECURITYSETTINGS__PASSWORD=${{ env.ECASAPISECURITYSETTINGS__PASSWORD }} -p DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTID=${{ env.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTID }} -p DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTSECRET=${{ env.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDCLIENTSECRET }} -p DYNAMICSAUTHENTICATIONSETTINGS__CLOUDUSERNAME=${{ env.DYNAMICSAUTHENTICATIONSETTINGS__CLOUDUSERNAME }} -p TENANTID=${{ env.TENANTID }}\
          | oc apply -f -
          

          oc process -f ./openshift/templates/cas-api/cas-api.dc.yaml -p APP_NAME=${{ env.APP_NAME }} -p REPO_NAME=${{ env.REPO_NAME }} -p BRANCH=${{ env.BRANCH }}  -p NAMESPACE=${{ env.OPENSHIFT_NAMESPACE_PROD }} -p TAG=${{ steps.get-latest-tag.outputs.tag  }} -p MIN_REPLICAS=${{ env.MIN_REPLICAS }} -p MAX_REPLICAS=${{ env.MAX_REPLICAS }} -p MIN_CPU=${{ env.MIN_CPU }} -p MAX_CPU=${{ env.MAX_CPU }} -p MIN_MEM=${{ env.MIN_MEM }} -p MAX_MEM=${{ env.MAX_MEM }} -p HOST_ROUTE=${{ env.HOST_ROUTE }}\
          | oc apply -f -

                   

          # Start rollout (if necessary) and follow it


          oc rollout latest dc/${{ env.APP_NAME_FRONTEND }} 2> /dev/null || true && echo "Rollout Front End in progress"

          oc rollout latest dc/${{ env.APP_NAME_API }} 2> /dev/null || true && echo "Rollout ECAS API  in progress"

          oc rollout latest dc/${{ env.APP_NAME_CAS }} 2> /dev/null || true && echo "Rollout CAS API in progress"

          oc logs  dc/${{ env.IMAGE_NAME_FRONTEND }}
          
          oc logs  dc/${{ env.IMAGE_NAME_API }} 
          
          oc logs  dc/${{ env.IMAGE_NAME_CAS }} 

          # Get status, returns 0 if rollout is successful

          oc rollout status dc/${{ env.IMAGE_NAME_FRONTEND }}

          oc rollout status dc/${{ env.IMAGE_NAME_API }}

          oc rollout status dc/${{ env.IMAGE_NAME_CAS }}
          
